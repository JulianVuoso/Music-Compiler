; "new_line" debe matchear con : '\n'
<start>           ::=  "start" "new_line" <program> "stop" "new_line"                        

; "new_line" debe matchear con : '\n'
<program>         ::=  <program> <declare>                                                  
                    |  <program> <assign>                                                 
                    |  <program> <if_sentence>                                            
                    |  <program> <do_sentence>                                            
                    |  <program> <while_sentence>                                         
                    |  <program> <play>                                                   
                    |  <program> <print>                                                  
                    |  <program> <getter>                                                 
                    |  <program> "new_line"                                                 
                    |                                                         
                    ;

; "new_line" debe matchear con : '\n'
<play>            ::= "play" "(" <expression> ")" "new_line"                   
                    ;


; "string" es una cadena que debe matchear con la expresion regular: string      \"[^\"]*\"
; "new_line" debe matchear con : '\n'
<print>           ::= "print" "(" <expression> ")" "new_line"                  
                    | "print" "(" "string" ")" "new_line"                      
                    ;


; "new_line" debe matchear con : '\n'
; "variable" debe matchear con:     [a-z][a-z0-9_]* 
<getter>          ::= "getnum" "(" "variable" ")" "new_line"                       
                    | "getchord" "(" "variable" ")" "new_line"                     
                    ;

; "new_line" debe matchear con : '\n'
<do_sentence>     ::= "do" <body> "while" <compare> "new_line"                                    
                    ;


; "new_line" debe matchear con : '\n'
<while_sentence>  ::= "while" <compare> <body> "new_line"                                       
                    ;


; "new_line" debe matchear con : '\n'
<if_sentence>     ::= "if" <compare> <body> "new_line"                                          
                    | "if" <compare> <body> "else" <body> "new_line"                                
                    ;


<compare>         ::= "(" <mult_compare> <any_op> <single_compare> ")"         
                    | "(" <single_compare> ")"                             
                    ;

<single_compare>  ::= "(" <mult_compare> <any_op> <single_compare> ")"         
                    | "!" "(" <mult_compare> ")"                        
                    | <expression>                                                       
                    ;

<mult_compare>    ::= <mult_compare> <any_op> <single_compare>                                                                
                    | <single_compare>                                                    
                    ;

<any_op>          ::= <add_op_logic>                         
                    | <op_compare>                           
                    ;
                
<body>            ::= "{" <program> "}"     
                    ;

<add_op_logic>    ::= "and"                               
                    | "or"                                
                    ;

<op_compare>      ::= ">"                                
                    | ">="                                   
                    | "<"                                
                    | "<="                               
                    | "=="                             
                    | "!="                         
                    ;


; "new_line" debe matchear con : '\n'
; "variable" debe matchear con:     [a-z][a-z0-9_]* 
<declare>         ::= <var_type> "variable" "new_line"                      
                    ;


; "new_line" debe matchear con : '\n'
; "variable" debe matchear con:     [a-z][a-z0-9_]* 
<assign>          ::= "variable" "=" <expression> "new_line"        
                    ;

<var_type>        ::= "int"                                                          
                    | "chord"                            
                    | "set"                             
                    ;

<expression>      ::= <expression> "+" <term>                   
                    | <expression> "-" <term>                 
                    | <term>                                  
                    ;

<term>            ::= <term> "*" <factor>                       
                    | <term> "/" <factor>                       
                    | <factor>                                  
                    ;


; "variable" debe matchear con:     [a-z][a-z0-9_]* 
<factor>          ::= <constant>                                            
                    | "variable"                                                   
                    | "[" <expression> <expression> "]"     
                    | "(" <expression> ")"                     
                    ;

; "number" debe matchear con:       ([1-9][0-9]*|(0))
; "chord" debe matchear con:        a{note}m?
; "note" debe matchear con:         (As|Cs|Ds|Fs|Gs|[_A-G])
<constant>        ::= "chord"                                 
                    | "number"                               
                    | "note"                              
                    ;
